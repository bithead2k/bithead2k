#!/bin/bash
#===============================================================================
#
#          FILE: git_delete_branch
#
#         USAGE: ./git_delete_branch
#
#   DESCRIPTION: Delete both the local and remote copies of a branch 
#
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Kirk L. Roybal (DBRE), Kirk.Roybal@credativ.us
#  ORGANIZATION: Instaclustr
#       CREATED: 04/26/2021 02:46:57 PM
#      REVISION:  ---
#===============================================================================

current_branch=$(git branch 2>&1 | grep '*' | sed 's/^\* //')

ScriptVersion="1.0"

#===  FUNCTION  ================================================================
#         NAME:  usage
#  DESCRIPTION:  Display usage information.
#===============================================================================
function usage ()
{
	cat <<- EOT

  Usage :  ${0##/*/} [options] [--] 

  Options: 
  -b|branch [name]  Specify the branch to delete.  Default: current branch
  -h|help           Display this message
  -v|version        Display script version

	EOT
}    # ----------  end of function usage  ----------

#-----------------------------------------------------------------------
#  Handle command line arguments
#-----------------------------------------------------------------------

function branch_exists() {

    git show-ref --verify --quiet "refs/heads/$1"

}

function delete_branch() {

    oldpwd=$(pwd)
    # can't check out while in the current branch or in the branch dir
    cd "$(git rev-parse --show-toplevel)" && git checkout master && git branch -D "$1" && git origin --delete "$1"
    [[ -d "$oldpwd" ]] && cd "$oldpwd"  # if the directory still exists after the branch delete, change there.

}

while getopts ":b:hv" opt
do
  case $opt in

    b|branch   )  current_branch="$OPTARG";;

    h|help     )  usage; exit 0   ;;

    v|version  )  echo "$0 -- Version $ScriptVersion"; exit 0   ;;

    \? )  echo -e "\n  Option does not exist : $OPTARG\n"
          usage; exit 1   ;;

  esac    # --- end of case ---
done
shift $(($OPTIND-1))

[[ ! branch_exists "$current_branch" ]] || die 3 "Branch does not exists $current_branch"

case "${current_branch}" in
    "") die 1 "Not currently in a branch" ;;
    "master") die 2 "Cannot delete the master branch.";;
    *) delete_branch "$current_branch" ;;
esac


